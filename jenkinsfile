pipeline{
    agent any
      stages {
        stage('clone'){
					steps{
          	git 'https://github.com/patilume/maven-project.git'
					}
				}
				stage('compile'){
				//agent { label 'maven'}
					steps{
						withMaven(maven : 'maven'){
						sh 'mvn compile'
					}
				}
			}
			stage('test'){
				steps{
					withMaven(maven : 'maven'){
						sh 'mvn test'
					}
				}
			}
			stage('package'){
				steps{
					withMaven(maven : 'maven'){
						sh 'mvn package'
					}
				}
			}
			stage('install'){
				steps{
					withMaven(maven : 'maven'){
						sh 'mvn install'
					}
				}
			}
			stage('deploy to tomcat'){
				steps{
					sshagent(['tomcat-deploy']) {
					//sh 'scp -o StrictHostKeyChecking=no webapp/target/*.war ec2-user@172.31.46.70:/usr/share/tomcat/webapps/'
					//sh 'scp -o StrictHostKeyChecking=no **/dockerfile ec2-user@172.31.46.70:/usr/local/'
					
					sh ''' ssh -o StrictHostKeyChecking=no ec2-user@172.31.46.70<<EOT
							docker build -t my-tomcat:1.0.0 -f https://github.com/patilume/maven-project.git
							docker run --rm --name my-tomcat -itd -p 8080:8080 my-tomcat:1.0.0
					   '''
					   //cd /usr/local/
					   //scp -o **/dockerfile ec2-user@172.31.46.70:/usr/local/
					   /* 
					   docker exec -it my-tomcat /bin/bash
							cd webapps
							scp webapp/target/*.war:webapps/
					   */
					//sh 'docker exec -it my-tomcat /bin/bash'
					//sh 'cd webapps'
					//sh 'scp webapp/target/*.war:webapps/'
					
					//:/usr/local/tomcat/webapps/
					//webapp/target/*.war
					
					}
				}
			}
			/* stage('deploy to wildfly'){
				steps{
					sshagent(['tomcat-deploy']) {
					sh 'scp -o StrictHostKeyChecking=no webapp/target/*.war ec2-user@13.232.243.118:/opt/wildfly/standalone/deployments/'
					}
				}
			} */
	}
}
