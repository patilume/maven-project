pipeline {
	//make sure docker is installed docker service is active on slave
	agent { label 'docker-agent' }

	stages{
		stage('set enviornment'){
			steps{
				script {
					env.username = 'Umesh Patil'
					env.email = 'patilume@gmail.com'
					env.dockerImageName = 'my-webapp'
					env.dockerImageVersion = '1.2.0'
				}
			}
		}
		
		stage('Git Checkout'){
			steps{
				git url: 'https://github.com/patilume/maven-project.git',
				branch:'master'
			}
		}

		stage('MVN Package'){
			agent { 
				docker {
					image 'maven:3-alpine'
					label 'docker-agent'
					args '-u root'
				} 
			}
			steps{
				sh 'mvn clean package'
				//sh 'mvn --version'
				//sh 'pwd'
				//sh 'ls'
				//sh 'cd webapp/target && ls'
				//sh 'ls'
			}
		}

		stage('Build Docker Image'){
			steps{
				sh 'pwd'
				//sh "$HOME"
				sh 'ls'
				//sh 'cd webapp/target && ls'
				//sh "docker build /var/lib/jenkins/workspace/pipeline_docker_remote_host/ -t patilume/${env.dockerImageName}:${BUILD_NUMBER}"
				sh "docker build /home/jenkins/workspace/pipeline_remote_docker/ -t patilume/${env.dockerImageName}:${BUILD_NUMBER}"
				sh "docker tag patilume/${env.dockerImageName}:${BUILD_NUMBER} patilume/${env.dockerImageName}:${BUILD_NUMBER}:latest"
				script{
					try {	
						sh "docker rmi \$(docker images -q --filter 'dangling=true')"
					}
					catch(error) {
					}
				}
			}
		}
   
	}
}
